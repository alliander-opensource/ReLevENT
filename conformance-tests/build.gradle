//#############################################################################
//Global configuration
//#############################################################################


plugins {
    id 'java-library'
    id 'com.github.jk1.dependency-license-report' version '2.8'
}
repositories {
    mavenCentral()
}
dependencies {
    implementation 'ch.qos.logback:logback-classic:1.5.6'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.13'

    implementation("com.fasterxml.jackson.core:jackson-databind:2.17.1")

    implementation group: 'com.beanit', name: 'iec61850bean', version: '1.9.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.16.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'

    implementation("com.hivemq:hivemq-mqtt-client:1.3.3")
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.openmuc.fnn.steuerbox.ScheduleWriterExample'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}


import com.github.jk1.license.render.XmlReportRenderer

licenseReport {
    outputDir = "$projectDir/build/licenses"
    configurations = ['runtimeClasspath']
    excludeOwnGroup = true
    excludeBoms = false
    renderers = [new XmlReportRenderer('third-party-libs.xml', 'Back-End Libraries')]
    allowedLicensesFile = new File("$projectDir/allowed-licenses.json")
}

